http:
  routers:
    http:
      service: noop@internal
      entryPoints:
        - web
      rule: Host(`*`)
    traefik-secure:
      service: api@internal
      entryPoints:
        - web-secure
      rule: {{ traefik_rule }}
      tls:
        certResolver: letsencrypt
{%- for p in projects %}
  {%- for s in p.services %}
    {%- for i in s.ingress %}
      {%- set name = p.name ~ '-' ~ s.name.replace('.', '-') ~ '-' ~ i.port %}
    {{ name}}:
      service: {{ name }}
      entryPoints:
      {%- if i.passthrough %}
        - web
      rule: 'Host(`{{ i.domain }}`) && PathPrefix(`/.well-known/acme-challenge/`)'
      {%- else %}
        - web-secure
      rule: 'Host(`{{ i.domain }}`){% if i.path_prefix %} && PathPrefix(`{{ i.path_prefix }}`){% endif %}'
      tls:
        certResolver: letsencrypt
      {%- endif %}
    {%- endfor %}
  {%- endfor %}
{%- endfor %}
  services:
{%- for p in projects %}
  {%- for s in p.services %}
    {%- for i in s.ingress %}
      {%- set name = p.name ~ '-' ~ s.name.replace('.', '-') ~ '-' ~ i.port %}
    {{ name}}:
      loadBalancer:
        servers:
      {%- if i.passthrough %}
          # just forwarding port 80 for doing own http challenge:
          - url: http://{{ s.name }}:80/
      {%- else %}
          # routing to a service on the host:
          - url: http://{{ s.name }}:{{ i.port }}/
      {%- endif %}
    {%- endfor %}
  {%- endfor %}
{%- endfor %}
  middlewares:
    removeServiceSelector:
      stripPrefix:
        forceSlash: false
    redirect:
      redirectScheme:
        scheme: https
    traefik-auth:
      basicauth:
        users: {{ traefik_admin }}
    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        # HSTS - uncomment for HSTS
        #forceSTSHeader: true
        #stsIncludeSubdomains: true
        #stsPreload: true
    rate-limit:
      rateLimit:
        average: 100
        burst: 50
{%- if plugin_registry.crowdsec.enabled %}
    crowdsec:
      plugin:
        bouncer:
{%- for k, v in plugin_registry.crowdsec.options.items() %}
          {{ k }}: {{ v }}
{%- endfor %}
          enabled: true
          forwardedHeadersTrustedIPs:
            - 172.0.0.0/8
            - 192.168.0.0/16
          clientTrustedIPs: {{ trusted_ips_cidrs }}
          crowdsecMode: live
          crowdsecAppsecEnabled: true
          crowdsecAppsecFailureBlock: true
          crowdsecAppsecHost: crowdsec:7422
          crowdsecLapiKey: {{ plugin_registry.crowdsec.apikey }}
          crowdsecLapiHost: crowdsec:8080
          crowdsecLapiScheme: http
          crowdsecLapiTLSInsecureVerify: false
{%- endif %}