http:
  routers:
    http:
      service: noop@internal
      entryPoints:
        - web
      middlewares:
        - redirect
      rule: Host(`*`)
    traefik-secure:
      service: api@internal
      entryPoints:
        - web-secure
      middlewares:
        - traefik-auth
      rule: {{ traefik_rule }}
      tls:
        certResolver: letsencrypt
{%- for p in projects %}
  {%- set s = p.services[0] %}
  {%- if s.passthrough %}
    {{ p.name}}:
      service: {{ p.name }}
      entryPoints:
        - web
      rule: 'Host(`{{ p.domain }}`)'
  {%- endif %}
{%- endfor %}
  services:
{%- for p in projects %}
  {%- set s = p.services[0] %}
  {%- if s.passthrough %}
    {{ p.name}}:
      loadBalancer:
        servers:
          # just forwarding port 80 for doing own http challenge
          - url: http://{% if p.entrypoint == s.name %}{{ p.name }}-{% endif %}{{ s.name }}:80/
  {%- endif %}
{%- endfor %}
          # the rest of the services are brought up by containers with their labels
  middlewares:
    removeServiceSelector:
      stripPrefix:
        forceSlash: false
    redirect:
      redirectScheme:
        scheme: https
    traefik-auth:
      basicauth:
        users: {{ traefik_admin }}
    my-traefik-get-real-ip:
      plugin:
        traefik-get-real-ip:
          Proxy:
            - proxyHeadername: X-From-Cdn
              proxyHeadervalue: cdn1
              realIP: X-Forwarded-For
            - proxyHeadername: X-From-Cdn
              proxyHeadervalue: cdn2
              realIP: Client-Ip
            - overwriteXFF: 'true'
              proxyHeadername: X-From-Cdn
              proxyHeadervalue: cdn3
              realIP: Cf-Connecting-Ip
            - proxyHeadername: '*'
              realIP: RemoteAddr
